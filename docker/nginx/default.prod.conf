# ===========================================
# Production Virtual Host Configuration
# Photography Gallery with SSL/TLS Security
# ===========================================

# HTTP to HTTPS redirect server
server {
    listen 80;
    listen [::]:80;
    server_name _;

    # Security headers for HTTP requests
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Let's Encrypt ACME challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint (no redirect)
    location = /health {
        access_log off;
        proxy_pass http://photograph_app/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAIN};

    # ===========================================
    # SSL/TLS CONFIGURATION
    # ===========================================
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Enhanced security headers for HTTPS
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.jsdelivr.net cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com cdn.jsdelivr.net; img-src 'self' data: https: blob:; font-src 'self' fonts.gstatic.com; connect-src 'self'; media-src 'self' blob:; object-src 'none'; child-src 'self'; frame-src 'none'; worker-src 'self' blob:; frame-ancestors 'self'; form-action 'self'; upgrade-insecure-requests; base-uri 'self'" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), vr=(), accelerometer=(), gyroscope=(), magnetometer=(), fullscreen=(self)" always;

    # Connection limits
    limit_conn conn_limit_per_ip 50;
    limit_conn conn_limit_per_server 1000;

    # ===========================================
    # MAIN APPLICATION
    # ===========================================
    location / {
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        
        # Proxy to Rails application
        proxy_pass http://photograph_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for better real-time response
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
        
        # Handle large uploads
        proxy_request_buffering off;
        client_max_body_size 100M;
    }

    # ===========================================
    # AUTHENTICATION ENDPOINTS
    # ===========================================
    location ~ ^/(login|register|sessions|photographers/new|photographers) {
        # Strict rate limiting for auth endpoints
        limit_req zone=auth burst=5 nodelay;
        
        # Security logging
        access_log /var/log/nginx/auth.log security;
        
        proxy_pass http://photograph_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Enhanced security for auth endpoints
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
    }

    # ===========================================
    # FILE UPLOAD ENDPOINTS
    # ===========================================
    location ~ ^/(galleries/.*/images|images) {
        # Rate limiting for uploads
        limit_req zone=uploads burst=3 nodelay;
        
        # Large file upload configuration
        client_max_body_size 100M;
        client_body_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        
        proxy_pass http://photograph_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Disable request buffering for large uploads
        proxy_request_buffering off;
        proxy_buffering off;
    }

    # ===========================================
    # API ENDPOINTS
    # ===========================================
    location ~ ^/api/ {
        # API rate limiting
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://photograph_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # API-specific headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
    }

    # ===========================================
    # STATIC ASSETS AND CACHING
    # ===========================================
    # Rails assets (CSS, JS, images)
    location ^~ /assets/ {
        proxy_pass http://photograph_app;
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Vary "Accept-Encoding" always;
        
        # Enable gzip for static assets
        gzip_static on;
        
        # Security headers for assets
        add_header X-Content-Type-Options "nosniff" always;
        
        # CORS for assets if needed
        add_header Access-Control-Allow-Origin "*" always;
    }

    # Active Storage uploaded files
    location ^~ /rails/active_storage/ {
        # Rate limiting for file downloads
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://photograph_app;
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Security for image serving
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Content-Security-Policy "default-src 'none'; img-src 'self'; style-src 'unsafe-inline'" always;
    }

    # ===========================================
    # HEALTH CHECKS AND MONITORING
    # ===========================================
    location = /health {
        access_log off;
        proxy_pass http://photograph_app/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Nginx status (restricted access)
    location = /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    # ===========================================
    # ROBOTS AND FAVICON
    # ===========================================
    location = /robots.txt {
        proxy_pass http://photograph_app;
        expires 1d;
        add_header Cache-Control "public" always;
        access_log off;
    }
    
    location = /favicon.ico {
        proxy_pass http://photograph_app;
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        access_log off;
    }

    # ===========================================
    # SECURITY RESTRICTIONS
    # ===========================================
    # Block access to sensitive files
    location ~ /\.(ht|env|git) {
        deny all;
        return 404;
    }

    # Block access to backup files
    location ~ \.(bak|backup|swp|save|old)$ {
        deny all;
        return 404;
    }

    # Block PHP files (not needed for Rails)
    location ~ \.php$ {
        deny all;
        return 404;
    }

    # Block common exploit attempts
    location ~ /(wp-admin|wp-login|phpmyadmin|admin|xmlrpc) {
        deny all;
        return 404;
    }

    # ===========================================
    # ERROR PAGES
    # ===========================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}